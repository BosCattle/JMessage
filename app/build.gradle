apply plugin: 'com.android.application'
apply plugin: 'realm-android'

def gitVersionCode() {
  def cmd = 'git rev-list HEAD --all  --count'
  def str = cmd.execute().text.trim()
  if (str.empty || str == null) {
    return 1
  } else {
    return str.toInteger()
  }
}

def gitVersionName() {
  def cmd = 'git describe --abbrev=0 --tags'
  def versionName = cmd.execute().text.trim()
  if (versionName.length() > 5 || versionName.length() <= 0) {
    return "1.0";
  } else {
    return versionName;
  }
}

def buildTime() {
  def date = new Date()
  def formatDate = date.format('yyyy-MM-dd', TimeZone.getDefault())
  return formatDate
}

android {
  compileSdkVersion rootProject.ext.android.compileSdkVersion
  buildToolsVersion rootProject.ext.android.buildToolsVersion
  defaultConfig {
    applicationId "com.china.epower.chat"
    multiDexEnabled true
    minSdkVersion rootProject.ext.android.minSdkVersion
    targetSdkVersion rootProject.ext.android.targetSdkVersion
    versionCode getVersionCode()
    versionName getVersionName()
    resValue "string", "tray__authority", "${applicationId}.tray"
    manifestPlaceholders = [PGYER_APPID: 'ac73a19561068d65d804e9ca13fc99da']
  }

  packagingOptions {
    exclude 'META-INF/DEPENDENCIES.txt'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/notice.txt'
    exclude 'META-INF/license.txt'
    exclude 'META-INF/dependencies.txt'
    exclude 'META-INF/LGPL2.1'
  }
  dexOptions {
    preDexLibraries = false
    javaMaxHeapSize "4g"
  }

  compileOptions {
    sourceCompatibility rootProject.ext.android.javaVersion
    targetCompatibility rootProject.ext.android.javaVersion
  }
  lintOptions {
    checkReleaseBuilds false
    abortOnError false
    ignoreWarnings true
    showAll true
    disable 'RestrictedApi'
  }

  signingConfigs {
    release {
      keyAlias 'powerchat'
      keyPassword 'powerchat'
      storeFile file('./keystore/release.keystore')
      storePassword 'powerchat'
    }

    debug {
      keyAlias 'debug'
      keyPassword 'powerchat'
      storeFile file('./keystore/debug.keystore')
      storePassword 'powerchat'
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      shrinkResources false
      zipAlignEnabled true
      signingConfig signingConfigs.release
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  configurations {
    all*.exclude group: 'com.android.support', module: 'support-v13'
  }
  api fileTree(include: ['*.jar'], dir: 'libs')
  api project(':PowerSupportUI')
  api 'com.android.support:multidex:' + rootProject.ext.depsVersion.multidexVersion
  api 'com.github.Doublemine:SimpleHud:' + rootProject.ext.depsVersion.simpleHudVersion
  api 'io.reactivex:rxandroid:' + rootProject.ext.depsVersion.rxAndroidVersion
  api 'io.reactivex:rxjava:' + rootProject.ext.depsVersion.rxJavaVersion
  api 'com.roughike:bottom-bar:' + rootProject.ext.depsVersion.bottombarVersion
  api 'com.github.BosCattle:ViewCollection:' + rootProject.ext.depsVersion.viewcollectionVersion
  api 'com.pgyersdk:sdk:' + rootProject.ext.depsVersion.pgyersdkVersion
  api 'com.afollestad.material-dialogs:core:' + rootProject.ext.depsVersion.materialDialogsVersion
  api 'com.github.BosCattle:MultiType-FilePicker:' + rootProject.ext.depsVersion.multiTypeFilePickerVersion
  api 'com.jakewharton:butterknife:' + rootProject.ext.depsVersion.butterknifeVersion
  annotationProcessor 'com.jakewharton:butterknife-compiler:' + rootProject.ext.depsVersion.butterknifeVersion
  debugApi 'com.squareup.leakcanary:leakcanary-android:' + rootProject.ext.depsVersion.leakcanaryAndroidVersion
  releaseApi 'com.squareup.leakcanary:leakcanary-android-no-op:' + rootProject.ext.depsVersion.leakcanaryAndroidVersion
  api 'com.tbruyelle.rxpermissions:rxpermissions:' + rootProject.ext.depsVersion.rxpermissionsVersion
}
